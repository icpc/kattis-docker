#!/bin/bash -x

build=false
pull=true
slim=false
fat=true

while [ $# -gt 0 ]
do
    case "$1"
    in
        --build) build=true; pull=false; shift;;
        --pull) build=false; pull=true; shift;;        
        --slim)  slim=true; fat=false; shift;;
        --fat)  slim=false; fat=true; shift;;        
        *) echo "usage: setup <--build|--pull> <--slim|--fat>"; exit 1;;
    esac
done

get_script_dir () {
    pushd $(dirname "${BASH_SOURCE[0]}") >/dev/null
    pwd
    popd >/dev/null
}

THIS_DIR="$(get_script_dir)"
BASE_DIR="$(dirname "$THIS_DIR")"
BASE_NAME="$(basename "$BASE_DIR")"
base_name="$(echo $BASE_NAME | tr ' [:upper:]' '_[:lower:]')"

commands () {
    local container="$1"
    local command=""
    shift
    pushd "$BASE_DIR/bin" > /dev/null
    if [ ! -f .gitignore ]
    then
	touch .gitignore
    fi
    for command in "$@"
    do
        recommand=${command//+/\\+}        
        /bin/rm -rf "$command"
        ln -s "$container-command" "$command"
        chmod +x "$command"
        if ! egrep -q "^$recommand"'$' .gitignore
	then
            echo "$command" >> .gitignore
        fi
    done
    popd > /dev/null
}


if ! which docker > /dev/null
then
    echo "you must install docker..."
    exit 1
fi

for container in kattis gcc java python python3
do
    if [ "$container" = "kattis" ]
    then
        if [ "$fat" = "false" ]
        then
            continue
        fi
        tag="icpc/kattis:latest"
    else
        tag="icpc/kattis:$container-slim"
    fi

    if [ "$build" = "true" ]
    then
        if ! docker build -t $tag "$BASE_DIR/dockers/$container"
	then
	    echo "there were errors building $tag"
	fi
    else
        if ! docker pull $tag
	then
	    echo "there were errors pulling $tag"
	fi
    fi
done

if [ "$fat" = "true" ]
then
    commands kattis py3clean py3compile py3versions pybuild pyclean pycompile pydoc pydoc3 pygettext pygettext3 pypy pypyclean pypycompile pytest python python-config python2 python2-config python3 pyversions
    commands kattis c++ g++ cc gcc ld ranlib ar as nm make cmake
    commands kattis java javac jar
    commands kattis pdflatex ghostscript gs problem2html  problem2pdf verifyproblem
    commands kattis kotlin kotlinc kotlin-dce-js kotlinc-js kotlinc-jvm
else
    commands python pypy pypyclean pypycompile pytest python python-config python2 python2-config pyversions
    commands python3 python3 pytest3
    commands gcc c++ g++ cc gcc ld ranlib ar as nm make cmake
    commands java java javac jar
    commands java kotlin kotlinc kotlin-dce-js kotlinc-js kotlinc-jvm
fi
echo "Type ". ./context" in the project base directory ($BASE_DIR) to set your PATH"
